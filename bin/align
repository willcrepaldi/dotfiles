#!/usr/bin/env ruby

class Definition < Struct.new(:left, :right)
  def left_length
    left.length
  end

  def align(longest_declaration)
    left = self.left.ljust(longest_declaration)
    right = self.right
    "#{left} #{right}"
  end
end

class NotADefinition < String
  def left_length
    0
  end

  def align(longest_declaration)
    self
  end
end

lines = STDIN.readlines.map { |line| line.sub(/\n$/, "") }

definitions = lines.map do |line|
  left, right = line.split("{", 2)
  if left && right
    left = left.rstrip
    right = "{" + right
    Definition.new(left, right)
  else
    NotADefinition.new(line)
  end
end

longest_declaration = definitions.map(&:left_length).max

aligned_lines = definitions.map do |definition|
  definition.align(longest_declaration)
end

puts aligned_lines.join("\n")
