" Word Frequency
"---------------

function! s:OpenGithubPr()
  silent! call system("~/.rubies/ruby-2.2.2/bin/ruby ~/bin/git-pr &")
endfunction
command! OpenGithubPr call <sid>OpenGithubPr()
nnoremap <leader>gp :OpenGithubPr<cr>

function! s:GitPrCommits()
  let pr_commits_file = '.git/pr-commits'
  if filereadable(pr_commits_file)
    execute 'read '.pr_commits_file
  endif
endfunction

command! GitPrCommits call <sid>GitPrCommits()

" BufRead seems more appropriate here but for some reason the final `wincmd p` doesn't work if we do that.
function OpenCommitMessageDiff()
  " Save the contents of the z register
  let old_z = getreg("z")
  let old_z_type = getregtype("z")

  try
    call cursor(1, 0)
    let diff_start = search("^diff --git")
    if diff_start == 0
      " There's no diff in the commit message; generate our own.
      let @z = system("git diff --cached -M -C")
    else
      " Yank diff from the bottom of the commit message into the z register
      :.,$yank z
      call cursor(1, 0)
    endif

    " Paste into a new buffer
    vnew
    normal! V"zP
  finally
    " Restore the z register
    call setreg("z", old_z, old_z_type)
  endtry

  " Configure the buffer
  set filetype=diff noswapfile nomodified readonly
  silent file [Changes\ to\ be\ committed]

  " Get back to the commit message
  wincmd p
endfunction

" vim: ft=vim
